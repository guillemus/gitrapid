/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashRouteImport } from './routes/dash'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OwnerRepoIssuesIndexRouteImport } from './routes/$owner/$repo/issues/index'
import { Route as OwnerRepoIssuesNewRouteImport } from './routes/$owner/$repo/issues/new'
import { Route as OwnerRepoIssuesIssueRouteImport } from './routes/$owner/$repo/issues/$issue'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashRoute = DashRouteImport.update({
  id: '/dash',
  path: '/dash',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OwnerRepoIssuesIndexRoute = OwnerRepoIssuesIndexRouteImport.update({
  id: '/$owner/$repo/issues/',
  path: '/$owner/$repo/issues/',
  getParentRoute: () => rootRouteImport,
} as any)
const OwnerRepoIssuesNewRoute = OwnerRepoIssuesNewRouteImport.update({
  id: '/$owner/$repo/issues/new',
  path: '/$owner/$repo/issues/new',
  getParentRoute: () => rootRouteImport,
} as any)
const OwnerRepoIssuesIssueRoute = OwnerRepoIssuesIssueRouteImport.update({
  id: '/$owner/$repo/issues/$issue',
  path: '/$owner/$repo/issues/$issue',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dash': typeof DashRoute
  '/login': typeof LoginRoute
  '/settings': typeof SettingsRoute
  '/$owner/$repo/issues/$issue': typeof OwnerRepoIssuesIssueRoute
  '/$owner/$repo/issues/new': typeof OwnerRepoIssuesNewRoute
  '/$owner/$repo/issues': typeof OwnerRepoIssuesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dash': typeof DashRoute
  '/login': typeof LoginRoute
  '/settings': typeof SettingsRoute
  '/$owner/$repo/issues/$issue': typeof OwnerRepoIssuesIssueRoute
  '/$owner/$repo/issues/new': typeof OwnerRepoIssuesNewRoute
  '/$owner/$repo/issues': typeof OwnerRepoIssuesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dash': typeof DashRoute
  '/login': typeof LoginRoute
  '/settings': typeof SettingsRoute
  '/$owner/$repo/issues/$issue': typeof OwnerRepoIssuesIssueRoute
  '/$owner/$repo/issues/new': typeof OwnerRepoIssuesNewRoute
  '/$owner/$repo/issues/': typeof OwnerRepoIssuesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dash'
    | '/login'
    | '/settings'
    | '/$owner/$repo/issues/$issue'
    | '/$owner/$repo/issues/new'
    | '/$owner/$repo/issues'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dash'
    | '/login'
    | '/settings'
    | '/$owner/$repo/issues/$issue'
    | '/$owner/$repo/issues/new'
    | '/$owner/$repo/issues'
  id:
    | '__root__'
    | '/'
    | '/dash'
    | '/login'
    | '/settings'
    | '/$owner/$repo/issues/$issue'
    | '/$owner/$repo/issues/new'
    | '/$owner/$repo/issues/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashRoute: typeof DashRoute
  LoginRoute: typeof LoginRoute
  SettingsRoute: typeof SettingsRoute
  OwnerRepoIssuesIssueRoute: typeof OwnerRepoIssuesIssueRoute
  OwnerRepoIssuesNewRoute: typeof OwnerRepoIssuesNewRoute
  OwnerRepoIssuesIndexRoute: typeof OwnerRepoIssuesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dash': {
      id: '/dash'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$owner/$repo/issues/': {
      id: '/$owner/$repo/issues/'
      path: '/$owner/$repo/issues'
      fullPath: '/$owner/$repo/issues'
      preLoaderRoute: typeof OwnerRepoIssuesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$owner/$repo/issues/new': {
      id: '/$owner/$repo/issues/new'
      path: '/$owner/$repo/issues/new'
      fullPath: '/$owner/$repo/issues/new'
      preLoaderRoute: typeof OwnerRepoIssuesNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$owner/$repo/issues/$issue': {
      id: '/$owner/$repo/issues/$issue'
      path: '/$owner/$repo/issues/$issue'
      fullPath: '/$owner/$repo/issues/$issue'
      preLoaderRoute: typeof OwnerRepoIssuesIssueRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashRoute: DashRoute,
  LoginRoute: LoginRoute,
  SettingsRoute: SettingsRoute,
  OwnerRepoIssuesIssueRoute: OwnerRepoIssuesIssueRoute,
  OwnerRepoIssuesNewRoute: OwnerRepoIssuesNewRoute,
  OwnerRepoIssuesIndexRoute: OwnerRepoIssuesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
