---
alwaysApply: true
---

When writing code that handles errors (such as catching exceptions, handling failed promises, or returning error states), you must use the error handling utilities defined in ./convex/utils.ts
Specifically, use the following utilities where appropriate:
- `tryCatch` for wrapping async operations and returning a Result type.
- `ok`, `err`, and `failure` for constructing success and error results.
- `unwrap` for extracting values from Result types, with proper error propagation.
- `octoCatch` for handling Octokit API errors.
Do not throw raw errors or return ad-hoc error objects; always use these utilities for consistency and reliability.
If you need to propagate an error, prefer returning a Result type or using `unwrap` to rethrow in a controlled way.
Do not use `tryÂ {} catch {}` statements, always prefer using the `if (result.error)` approach. 
